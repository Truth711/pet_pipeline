---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yelb.ui.fullname" . }}
  labels:
    app: {{ include "yelb.ui.name" . }}
spec:
  replicas: {{ .Values.ui.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "yelb.ui.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "yelb.ui.name" . }}
    spec:
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}    
      containers:
        - name: yelb-ui
          image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          ports:
            - containerPort: 80
          resources:
            {{- toYaml .Values.ui.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: {{ .Values.ui.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ui.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: {{ .Values.ui.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ui.readinessProbe.periodSeconds }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yelb.appserver.fullname" . }}
  labels:
    app: {{ include "yelb.appserver.name" . }}
spec:
  replicas: {{ .Values.appserver.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "yelb.appserver.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "yelb.appserver.name" . }}
    spec:
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: yelb-appserver
          image: "{{ .Values.appserver.image.repository }}:{{ .Values.appserver.image.tag }}"
          imagePullPolicy: {{ .Values.appserver.image.pullPolicy }}
          ports:
            - containerPort: 4567
          resources:
            {{- toYaml .Values.appserver.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: 4567
            initialDelaySeconds: {{ .Values.appserver.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.appserver.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: 4567
            initialDelaySeconds: {{ .Values.appserver.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.appserver.readinessProbe.periodSeconds }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.fullname" . }}
  labels:
    app: {{ include "redis.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "redis.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "redis.name" . }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - containerPort: 6379
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          volumeMounts:
            - name: redis-config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
            {{- if .Values.redis.persistence.enabled }}
            - name: redis-storage
              mountPath: /data
            {{- end }}
          args: ["redis-server", "/usr/local/etc/redis/redis.conf"]
          {{- if .Values.redis.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: {{ .Values.redis.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.redis.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.redis.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: {{ .Values.redis.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.redis.readinessProbe.periodSeconds }}
          {{- end }}
      volumes:
        - name: redis-config
          configMap:
            name: {{ include "redis.fullname" . }}-config
        {{- if .Values.redis.persistence.enabled }}
        - name: redis-storage
          persistentVolumeClaim:
            claimName: {{ include "redis.fullname" . }}-pvc
        {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yelb.db.fullname" . }}
  labels:
    app: {{ include "yelb.db.name" . }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "yelb.db.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "yelb.db.name" . }}
    spec:
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: yelb-db
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          ports:
            - containerPort: 5432
          resources:
            {{- toYaml .Values.db.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
              - pg_isready
            initialDelaySeconds: {{ .Values.db.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.db.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
              - pg_isready
            initialDelaySeconds: {{ .Values.db.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.db.readinessProbe.periodSeconds }}